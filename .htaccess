# Включаем движок mod_rewrite
RewriteEngine On

# ------------------------------------------------------------------------------
# 1) Сначала приводим домен к https://artfixpro.com (убираем http и www)
# ------------------------------------------------------------------------------
RewriteCond %{HTTP_HOST} !^artfixpro\.com$ [NC,OR]
RewriteCond %{HTTPS} !=on
RewriteRule ^(.*)$ https://artfixpro.com/%{REQUEST_URI} [R=301,L]

# ------------------------------------------------------------------------------
# 2) Устраняем проблему множественных слэшей (////).
#    Если в пути есть подряд несколько слэшей, сводим к одному.
#    (Должно идти после принудительного домена, чтобы не «ломать» редирект.)
# ------------------------------------------------------------------------------
RewriteCond %{REQUEST_URI} ^(.*)//+(.*)
RewriteRule ^.*$ https://artfixpro.com/%1/%2 [R=301,L]

# ------------------------------------------------------------------------------
# 3) Убираем index.html (редирект на корень).
#    Применяется только для запроса /index.html в корне.
# ------------------------------------------------------------------------------
RewriteCond %{THE_REQUEST} \s/+index\.html [NC]
RewriteRule ^index\.html$ / [R=301,L]

# ------------------------------------------------------------------------------
# 4) Удаляем расширение .html:
#    /page.html -> /page (301-редирект)
# ------------------------------------------------------------------------------
RewriteCond %{THE_REQUEST} "^[A-Z]{3,}\s(/[^\s]+)\.html\s" [NC]
RewriteRule ^([^.]+)\.html$ %1 [R=301,L]

# ------------------------------------------------------------------------------
# 5) Внутреннее сопоставление:
#    Если пользователь запросил /page, но есть файл page.html — отдать его
# ------------------------------------------------------------------------------
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^([^/]*)$ $1.html [L]

# ------------------------------------------------------------------------------
# 6) Безопасность: закрываем доступ к скрытым файлам (.htaccess и т. п.)
# ------------------------------------------------------------------------------
<FilesMatch "^\.">
    Require all denied
</FilesMatch>

<FilesMatch "\.(jpg|jpeg|png|gif|webp|css|js|woff2?)$">
  Header set Cache-Control "max-age=31536000, public"
</FilesMatch>

# ---------------------------------------------------------------------
# 7) Кэширование изображений, шрифтов, CSS и JS
# ---------------------------------------------------------------------
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType video/mp4 "access plus 1 month"
  ExpiresByType image/webp "access plus 1 month"
  ExpiresByType image/svg+xml "access plus 1 month"
  ExpiresByType image/png "access plus 1 month"
  ExpiresByType image/jpeg "access plus 1 month"
  ExpiresByType image/jpg "access plus 1 month"
  ExpiresByType image/gif "access plus 1 month"
  ExpiresByType text/css "access plus 1 month"
  ExpiresByType application/javascript "access plus 1 month"
</IfModule>

<IfModule mod_headers.c>
  <FilesMatch "\.(js|css|webp|png|jpg|jpeg|svg|woff2)$">
    Header set Cache-Control "max-age=31536000, public"
  </FilesMatch>
</IfModule>

<FilesMatch "\.(js)$">
  Header set Cache-Control "max-age=31536000, public"
</FilesMatch>

ErrorDocument 404 /404.html