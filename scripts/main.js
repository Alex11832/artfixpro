window.telegramConfig = {
  botToken: "8064031856:AAGYg6dkeDBdHp0C8XmV9UdNO20TedaMLd0", 
  chatId: "443139059"
};

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞–π—Ç–∞
document.addEventListener("DOMContentLoaded", () => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
  document.querySelector(".to_contacts")?.addEventListener("click", () => {
    window.location.href = "https://artfixpro.com/#contacts_block";
  });

  document.querySelector(".to_contacts_sec")?.addEventListener("click", () => {
    window.location.href = "https://artfixpro.com/#contacts_block";
  });

  document.querySelector(".to_services_sec")?.addEventListener("click", () => {
    window.location.href = "https://artfixpro.com/#services_block";
  });

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—É—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –≤ sessionStorage
  sessionStorage.setItem("service", "/tv-mounting");

  // –û—á–∏—Å—Ç–∫–∞ summaryData –µ—Å–ª–∏ –æ–Ω–æ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Å—Å–∏–∏
  const summaryData = sessionStorage.getItem("summaryData");
  if (summaryData) {
    const parsedData = JSON.parse(summaryData);
    if (
      parsedData.summaryItems &&
      parsedData.summaryItems.length > 0 &&
      (parsedData.summaryItems[0].title || parsedData.summaryItems[0].quantity)
    ) {
      sessionStorage.clear();
      window.location.reload();
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
  const getQuoteBtn = document.getElementById("getQuoteBtn");
  const serviceType = document.getElementById("serviceType");
  const serviceTypeError = document.getElementById("serviceTypeError");

  if (getQuoteBtn && serviceType && serviceTypeError) {
    getQuoteBtn.addEventListener("click", function() {
      const selectedUrl = serviceType.value;
      
      serviceType.style.borderColor = '';
      serviceTypeError.textContent = '';
      
      if (!selectedUrl) {
        serviceType.style.borderColor = 'red';
        serviceTypeError.textContent = 'Please select a service';
        return;
      }
      
      window.location.href = selectedUrl;
    });
  }

  // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Go to Service"
  const serviceZipButton = document.querySelector('.service_zip_button');
  if (serviceZipButton) {
    serviceZipButton.style.display = 'flex';
    serviceZipButton.style.justifyContent = 'center';
    serviceZipButton.style.marginTop = '20px';
  }

  // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–µ–∫—Ü–∏–∏ "Our Services"
  const serviceImages = document.querySelectorAll('.seo-card img');
  serviceImages.forEach(img => {
    img.style.display = 'block';
    img.style.margin = '0 auto 15px';
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  initContactForm();
    
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
async function sendToTelegram(formData) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  if (!window.telegramConfig) {
    window.telegramConfig = {
      botToken: '6889051644:AAGnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
      chatId: '-1002XXXXXXXXX' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —á–∞—Ç–∞
    };
  }
  
  const botToken = window.telegramConfig.botToken;
  const chatId = window.telegramConfig.chatId;
  
  if (!botToken || !chatId) {
    return false;
  }
  
  const text = `
üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:

üë§ –ò–º—è: ${formData.firstName} ${formData.lastName}
üìß Email: ${formData.email}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.comments}
  `;
  
  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
  
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML'
      })
    });
    
    const result = await response.json();
    return result.ok;
  } catch (error) {
    console.error('Error sending to Telegram:', error);
    return false;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function initContactForm() {
  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
  const contactForm = document.querySelector('.contact-form');
  const firstNameInput = document.getElementById('first-name');
  const lastNameInput = document.getElementById('last-name');
  const emailInput = document.getElementById('email');
  const phoneInput = document.getElementById('phone-number');
  const commentsInput = document.getElementById('questions-comments');
  const privacyCheckbox = document.getElementById('privacy-agreement');
  const successModal = document.querySelector('.success_modal');
  const modalOverlay = document.querySelector('.modal_overlay');
  
  // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
  if (!contactForm) return;
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –±—Ä–∞—É–∑–µ—Ä–∞
  contactForm.setAttribute('novalidate', 'novalidate');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  if (!firstNameInput || !lastNameInput || !emailInput || !phoneInput || !commentsInput || !privacyCheckbox) {
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
  const inputs = [firstNameInput, lastNameInput, emailInput, phoneInput, commentsInput];
  inputs.forEach(input => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—à–∏–±–∫–∏
    let errorDiv = input.parentNode.querySelector('.input-error');
    if (!errorDiv) {
      errorDiv = document.createElement('div');
      errorDiv.className = 'input-error';
      errorDiv.style.color = 'red';
      errorDiv.style.fontSize = '12px';
      errorDiv.style.marginTop = '5px';
      errorDiv.style.display = 'none';
      input.parentNode.appendChild(errorDiv);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è input –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ
    input.addEventListener('input', function() {
      const errorDiv = input.parentNode.querySelector('.input-error');
      if (errorDiv) {
        errorDiv.style.display = 'none';
      }
      input.style.borderColor = '';
    });
  });
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —á–µ–∫–±–æ–∫—Å–∞
  const checkboxContainer = privacyCheckbox.parentNode;
  let checkboxErrorDiv = checkboxContainer.querySelector('.checkbox-error');
  if (!checkboxErrorDiv) {
    checkboxErrorDiv = document.createElement('div');
    checkboxErrorDiv.className = 'checkbox-error';
    checkboxErrorDiv.style.color = 'red';
    checkboxErrorDiv.style.fontSize = '12px';
    checkboxErrorDiv.style.marginTop = '5px';
    checkboxErrorDiv.style.display = 'none';
    checkboxContainer.appendChild(checkboxErrorDiv);
  }
  
  // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ —á–µ–∫–±–æ–∫—Å–∞, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
  if (!document.querySelector('.checkbox-hint')) {
    const checkboxHint = document.createElement('div');
    checkboxHint.className = 'checkbox-hint';
    checkboxHint.style.fontSize = '12px';
    checkboxHint.style.color = '#666';
    checkboxHint.style.marginTop = '5px';
    checkboxHint.textContent = 'We respect your privacy and will only use your information to contact you about our services.';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ü–û–°–õ–ï –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —á–µ–∫–±–æ–∫—Å–∞
    checkboxContainer.parentNode.insertBefore(checkboxHint, checkboxContainer.nextSibling);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è change –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
  privacyCheckbox.addEventListener('change', function() {
    if (privacyCheckbox.checked) {
      checkboxErrorDiv.style.display = 'none';
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  contactForm.addEventListener('submit', function(event) {
    event.preventDefault();
    
    if (validateForm()) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      const submitButton = contactForm.querySelector('.send-request-btn');
      const originalButtonText = submitButton.textContent;
      submitButton.textContent = 'Sending...';
      submitButton.disabled = true;
      
      // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
      const formData = {
        firstName: firstNameInput.value.trim(),
        lastName: lastNameInput.value.trim(),
        email: emailInput.value.trim(),
        phone: phoneInput.value.trim(),
        comments: commentsInput.value.trim()
      };
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
      sendToTelegram(formData)
        .then(success => {
          // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
          submitButton.textContent = originalButtonText;
          submitButton.disabled = false;
          
          if (success) {
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            contactForm.reset();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            showSuccessModal();
          } else {
            alert('Error sending your message. Please try again later.');
          }
        })
        .catch((error) => {
          console.error('Form submission error:', error);
          // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
          submitButton.textContent = originalButtonText;
          submitButton.disabled = false;
          
          alert('Error sending your message. Please try again later.');
        });
    }
  });
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
  function validateForm() {
    let isValid = true;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
    if (!firstNameInput.value.trim()) {
      showError(firstNameInput, 'Please enter your first name');
      isValid = false;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–º–∏–ª–∏–∏
    if (!lastNameInput.value.trim()) {
      showError(lastNameInput, 'Please enter your last name');
      isValid = false;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (!emailInput.value.trim()) {
      showError(emailInput, 'Please enter your email');
      isValid = false;
    } else if (!isValidEmail(emailInput.value.trim())) {
      showError(emailInput, 'Please enter a valid email');
      isValid = false;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (!phoneInput.value.trim()) {
      showError(phoneInput, 'Please enter your phone number');
      isValid = false;
    } else if (!isValidPhone(phoneInput.value.trim())) {
      showError(phoneInput, 'Please enter a valid phone number');
      isValid = false;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    if (!commentsInput.value.trim()) {
      showError(commentsInput, 'Please enter your questions or comments');
      isValid = false;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–∞
    if (!privacyCheckbox.checked) {
      showCheckboxError('Please agree to the privacy policy');
      isValid = false;
    }
    
    return isValid;
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email
  function isValidEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  function isValidPhone(phone) {
    const phoneRegex = /^\+?[0-9\s\-()]{10,}$/;
    return phoneRegex.test(phone);
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏
  function showError(input, message) {
    const errorDiv = input.parentNode.querySelector('.input-error');
    if (errorDiv) {
      errorDiv.textContent = message;
      errorDiv.style.display = 'block';
    }
    input.style.borderColor = 'red';
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏ —á–µ–∫–±–æ–∫—Å–∞
  function showCheckboxError(message) {
    if (checkboxErrorDiv) {
      checkboxErrorDiv.textContent = message;
      checkboxErrorDiv.style.display = 'block';
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
  function showSuccessModal() {
    if (successModal && modalOverlay) {
      modalOverlay.style.display = 'flex';
      successModal.style.display = 'block';
      
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –æ–≤–µ—Ä–ª–µ–π
      modalOverlay.onclick = function(e) {
        if (e.target === modalOverlay) {
          modalOverlay.style.display = 'none';
          successModal.style.display = 'none';
        }
      };
      
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(function() {
        modalOverlay.style.display = 'none';
        successModal.style.display = 'none';
      }, 5000);
    }
  }
}